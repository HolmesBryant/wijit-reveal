/**
 * @author Holmes Bryant <https://github.com/HolmesBryant>
 * @license GPL-3.0
 */
export default class WijitForm extends HTMLElement{#t=!1;#n="dialog-message";#e={};#r=!1;#i=!1;#o=!0;#s=!0;#a="json";#l;#c;#d;errorElems;successElems;waitingElems;default={success:"<h3>Submission Received</h3><p>Thank you!</p>",error:"<h3>Oopsie!</h3><p>There was an error. Your submission was not received.</p>",waiting:"<h1>Please Wait...</h1>"};dialog;testing=!1;static observedAttributes=["custom-css","dialog-message-id","error","fetch-options","force-error","modal","reset","response","success","waiting"];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='<style id="wijit-form-css">@layer wijit-form {wijit-form { --accent-color: dodgerblue; --bg1-color: rgb(250,250,250); --bg2-color: rgb(245,245,245); --bg3-color: white; --border-color: silver; --fail-color: hsl(6, 93%, 80%); --pass-color: hsl(112, 70%, 75%); --text-color-: rgb(40,40,40); --text-color-light: rgb(240,240,240); --text-color-dark: rgb(40,40,40); --gap: .5rem; --min: 35px; --min-panel: 270px; --pad: .5rem; background-color: var(--bg1-color); border-radius: 10px; color: var(--text-color); display: inline-block; padding: var(--pad); width: 100%; overflow: auto; scrollbar-gutter: stable both-edges;scrollbar-color: var(--bg2-color) var(--bg3-color);}wijit-form > * {box-sizing: border-box;}@media (prefers-color-scheme: dark) { wijit-form { --bg1-color: rgb(35,35,35); --bg2-color: rgb(40,40,40); --bg3-color: rgb(60,60,60); --border-color: dimgray; --text-color: rgb(240,240,240); } } @media only screen and (max-width: 1024px) { wijit-form { --pad: .25rem; --gap: .25rem; } } @media only screen and (max-width: 380px) { wijit-form { --pad: 0; --gap: 5px; } }} /* layer */ /*********************/ /**** Backgrounds ****/ /*********************/ wijit-form details > *, wijit-form fieldset, wijit-form section { background-color: var(--bg2-color); } wijit-form button, wijit-form input, wijit-form input::before, wijit-form select, wijit-form textarea { background-color: var(--bg3-color); } wijit-form hr { background-color: silver; } wijit-form .primary, wijit-form option:checked { background-color: var(--accent-color); } wijit-form progress { background-color: transparent; } wijit-form progress::-webkit-progress-bar { background: transparent; } wijit-form progress::-webkit-progress-value { background-color: var(--accent-color); }wijit-form progress::-moz-progress-bar{ background-color: var(--accent-color); } wijit-form .error { background-color: var(--fail-color); } wijit-form .success { background-color: var(--pass-color); } wijit-form input[type=range]::-webkit-slider-thumb { background-color: var(--accent-color); } wijit-form input[type=range]::-moz-range-thumb { background-color: var(--accent-color); } /********************************/ /****** Borders / Outlines ******/ /********************************/ wijit-form button, wijit-form fieldset, wijit-form input, wijit-form input::before, wijit-form progress, wijit-form select, wijit-form textarea, wijit-form .error, wijit-form .success { border: 1px solid var(--border-color); } wijit-form option { border-bottom: 1px solid var(--border-color); } wijit-form hr, wijit-form option:last-child { border: none; } wijit-form input:user-valid:not([type="submit"]):not([type="reset"]):not([type="range"]) { border-color: var(--pass-color) } wijit-form :user-invalid { border-color: var(--fail-color) } wijit-form .success { border-color: var(--pass-color); } wijit-form .error { border-color: var(--fail-color); }wijit-form button,wijit-form fieldset,wijit-form hr,wijit-form input,wijit-form input::before,wijit-form option,wijit-form progress,wijit-form progress::-webkit-progress-value,wijit-form progress::-webkit-progress-bar,wijit-form section,wijit-form select,wijit-form textarea,wijit-form .error,wijit-form .success{ border-radius: .5rem; }wijit-form input[type=range]::-webkit-slider-thumb { border-radius: 50%; } wijit-form input[type=range]::-moz-range-thumb { border-radius: 50%; }wijit-form input[type="radio"],wijit-form input[type="radio"]::before{ border-radius: 50%; }wijit-form option{ border-radius: 0; }wijit-form option:first-child{ border-radius: .5rem .5rem 0 0; }wijit-form option:last-child{ border-radius: 0 0 .5rem .5rem; } wijit-form :focus-visible { border-color: transparent; outline: 1px solid var(--accent-color); } wijit-form input:checked::before { outline: 2px solid var(--accent-color); } /******************************/ /*********** Accent ***********/ /******************************/ wijit-form input { accent-color: var(--accent-color); } /******************************/ /************ Text ************/ /******************************/ wijit-form label.required:after { color: var(--fail-color) } wijit-form button, wijit-form input, wijit-form fieldset, wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form textarea { color: var(--text-color); } wijit-form .primary, wijit-form option:checked { color: var(--text-color-light); } wijit-form input:checked::before { color: var(--accent-color); } wijit-form option, wijit-form button, wijit-form input, wijit-form fieldset, wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form textarea { font-size: 1rem; letter-spacing: .1rem; } wijit-form input[type="checkbox"]::before, wijit-form input[type="radio"]::before { font-size: var(--min); } wijit-form label.required:after { font-size: small } wijit-form select:not([multiple]):not([size]) option {font-size: larger;} wijit-form button, wijit-form input[type="button"], wijit-form input[type="reset"], wijit-form input[type="submit"], wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form .error, wijit-form .success { font-weight:bold; } wijit-form .error, wijit-form .success { text-align: center; } wijit-form .primary, wijit-form option:checked { text-shadow: 1px 1px 1px black; } /*********************/ /****** Shadows ******/ /*********************/ wijit-form button:hover, wijit-form input[type="button"]:hover, wijit-form input[type="image"]:hover, wijit-form input[type="submit"]:hover, wijit-form input[type="reset"]:hover, wijit-form option:hover { box-shadow: 2px 2px 5px black; } wijit-form button:active, wijit-form input[type="button"]:active, wijit-form input[type="image"]:active, wijit-form input[type="submit"]:active, wijit-form input[type="reset"]:active, wijit-form option:active, wijit-form option:checked { box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]::-webkit-slider-thumb:hover { box-shadow: 2px 2px 5px black; } wijit-form input[type=range]::-moz-range-thumb:hover { box-shadow: 2px 2px 5px black; } wijit-form input[type=range]:active::-webkit-slider-thumb { box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:active::-moz-range-thumb { box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:focus::-webkit-slider-thumb { box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:focus::-moz-range-thumb { box-shadow: inset 2px 2px 5px black; } /*********************/ /******* Cursor ******/ /*********************/ wijit-form input[type="button"], wijit-form input[type="checkbox"], wijit-form input[type="radio"], wijit-form input[type="color"], wijit-form input[type="range"], wijit-form input[type="reset"], wijit-form input[type="submit"], wijit-form label, wijit-form button, wijit-form select { cursor: pointer; } wijit-form input:disabled, wijit-form *[disabled] { cursor: not-allowed; } /*********************/ /***** Structure *****/ /*********************/ wijit-form button, wijit-form input[type=submit], wijit-form input[type=reset] { margin: var(--gap); } wijit-form button,wijit-form input { min-height: var(--min); min-width: var(--min); padding: var(--pad);}wijit-form div {align-items: stretch;display: flex;flex-direction: column;flex-wrap: wrap;gap: 0 var(--gap);justify-content: center;margin: 1rem 0;}wijit-form div.row{ align-items: center; }wijit-form div > *,wijit-form fieldset > *,wijit-form section > *{ flex: 1; }wijit-form fieldset {display: flex;flex-direction: column;flex-wrap: wrap;gap: var(--gap);overflow-x: hidden;overflow-y: auto;padding: var(--pad); min-inline-size: var(--min-panel);}wijit-form header {display: block;flex-grow: 0;flex-shrink: 0;}wijit-form hr {min-width: 100%;max-height: 5px;}wijit-form .row > hr {min-width: 5px;margin: 0;max-width: 5px;max-height: 100%;} wijit-form input:disabled { opacity: 0.7; }wijit-form input[type="checkbox"],wijit-form input[type="radio"] { appearance: none; height: var(--min); position: relative; width: var(--min); } wijit-form input:checked::before { content: ""; line-height: 0; position: absolute; display: flex; height: 100%; width: 100%; align-items: center; justify-content: center; } wijit-form input[type="checkbox"]:checked::before { content: "✔"; } wijit-form input[type="radio"]:checked::before { content: "⬤"; } wijit-form input[type="color"], wijit-form input[type="checkbox"], wijit-form input[type="radio"] { flex: 0; flex-basis: var(--min); padding: 0; width: var(--min); } wijit-form input[type=file]::file-selector-button { background-color: var(--bg2-color); border: 1px solid var(--border-color); border-radius: .5rem; color: var(--text-color); font-weight: bold; padding: var(--pad); } /***** Input Range *****/ wijit-form div:has(input[type=range]) > label::after { content: attr(data-value); margin: 0 var(--gap); font-weight: normal; } wijit-form input[type=range] { appearance: none; -webkit-appearance: none; width: 100%; cursor: pointer; outline: none; padding: 0; max-height: var(--pad); min-height: var(--pad); } wijit-form input[type=range]::-webkit-slider-thumb { -webkit-appearance: none; height: var(--min); width: var(--min); } wijit-form input[type=range]::-moz-range-thumb { appearance: none; height: var(--min); width: var(--min); } /***** /Range *****/ wijit-form div:has(input[type=range]) > label { margin-bottom: var(--gap); }wijit-form label {flex: 0;white-space: nowrap;}wijit-form option {padding: 1rem;min-height: var(--min);}wijit-form progress {-webkit-appearance: none;-moz-appearance: none;appearance: none;inline-size: 100%;min-height: 1rem;}wijit-form div:has(progress) label::after {content: attr(data-value);font-weight: normal;margin: 0 var(--gap);}wijit-form progress::-webkit-progress-value{ min-height: 1rem; }wijit-form section {display: flex;flex-direction: column;flex-wrap: wrap;gap: var(--gap);overflow: auto;padding: var(--pad); min-inline-size: var(--min-panel);}wijit-form section + section{ margin: 1rem 0; }wijit-form select { min-height: var(--min); min-width: var(--min); overflow-y: auto;} wijit-form textarea { min-height: 5rem; min-width: 10rem; padding: var(--pad); width: 100%; } wijit-form .required:after { content: "*"; font-size: x-large; vertical-align: super; } /**** Classes ****/wijit-form .center > *,wijit-form .start > *,wijit-form .end > *,wijit-form .space-around > *,wijit-form .space-between > *{ flex: 0 1 max-content; }wijit-form .center {justify-content: center;align-items: center;}wijit-form section.row.center {align-items: normal;}wijit-form .end {align-content: flex-end;justify-content: flex-end;}wijit-form .reverse.end {align-content: flex-start;justify-content: flex-start;}wijit-form .nowrap{ flex-wrap: nowrap}wijit-form .reverse{ flex-direction: column-reverse; }wijit-form .row{ flex-direction: row; }wijit-form .row.reverse{ flex-direction: row-reverse; }wijit-form .space-around {justify-content: space-around;align-content: space-around;}wijit-form .space-between {justify-content: space-between;}wijit-form .row.space-between {align-content: space-between;}wijit-form .reverse.start {align-content: flex-end;justify-content: flex-end;}wijit-form .flex0 {flex: 0;}wijit-form .flex1 {flex: 1;}wijit-form .flex2 {flex: 2;}</style><style>:host {--fail-color: darksalmon;--pass-color: limegreen;}button {background-color: var(--accent-color);border: 1px solid var(--border-color);border-radius: 5px;color: var(--text-color);cursor: pointer;font-size: large;font-weight: bold;outline-color: var(--accent-color);padding: var(--pad);}button:hover,button:focus {box-shadow: 2px 2px 5px black;}button:active {box-shadow: inset 2px 2px 5px black;}dialog {background: transparent;border: none;box-sizing: border-box;color: var(--text-color);outline: none;text-align: center;}dialog::backdrop {background-color: white;color: black;opacity: 0.75;}dialog.modeless {accent-color: transparent;backdrop-filter: blur(.3rem);height: 100%;outline: none;overflow: hidden;padding: 0;top: 0;width: 100%;}dialog.modeless[open] {display: table;}.hidden{ display: none; }#dialog-message {background-color: var(--bg3-color);border: 1px solid var(--border-color);border-radius: 10px;display: table-cell;padding: 1rem;vertical-align: middle;}dialog.modeless #dialog-message {transition: all 1s;}#dialog-message.waiting {background-color: transparent;border: none;margin: auto;padding: 0;width: auto;}#dialog-message.error {border-color: var(--fail-color);}#dialog-message.success {border-color: var(--pass-color);}#wrapper {position: relative;}@media (prefers-color-scheme: dark) {dialog::backdrop {background-color: black;color: white;}}</style><div id="wrapper"><slot></slot><slot name="dialog"><dialog class="modeless"><div id="dialog-message"><slot name="message"></slot></div><form method="dialog" class="hidden"><button>OK</button></form></dialog></slot></div><div hidden id="responses" style="display:none"><button aria-label="close" form="dialog-form">OK</button><slot name="waiting"></slot><slot name="success"></slot><slot name="error"></slot></div>',this.mainAbortController=new AbortController}connectedCallback(){this.errorElems=this.querySelectorAll("[slot=error]"),this.successElems=this.querySelectorAll("[slot=success]"),this.waitingElems=this.querySelectorAll("[slot=waiting]"),this.customCss||this.addDefaultCss(),this.handleRangeInputs(this.querySelectorAll("input[type=range]")),this.handleProgressElems(this.querySelectorAll("progress")),this.addEventListeners()}attributeChangedCallback(t,n,e){e=e.toLowerCase(),t.indexOf("-")>-1&&(t=(t=t.split("-").map((t=>t.charAt(0).toUpperCase()+t.slice(1))).join("")).replace(t.charAt(0),t.charAt(0).toLowerCase())),this[t]=e}disconnectedCallback(){this.mainAbortController.abort()}addEventListeners(){const t=this.querySelector("form"),n=this.querySelector("dialog")||this.shadowRoot.querySelector("dialog");this.addFocusListeners(this.querySelectorAll("input")),t&&t.addEventListener("submit",(t=>{t.preventDefault(),this.reset&&t.target.reset(),this.submitData(t)}),{signal:this.mainAbortController.signal}),n.addEventListener("close",((t,n)=>{this.reset&&this.resetElements(n)}),{signal:this.mainAbortController.signal})}async submitData(t){if(t.preventDefault(),t.target.action.endsWith("false"))return;let n,e;const r=new FormData(t.target),i="html"===this.response?"text/html":"application/json",o=t.target.getAttribute("method")||"POST",s=this.setFetchOptions(o,i);if(this.testing||this.showDialog(this.waiting,null),t.target.action.endsWith("test")?this.#s=!1:(this.#s=!0,n=t.target.action),"GET"===s.method||"HEAD"===s.method){let t=0;n+="?";for(const e of r.entries())n+=0===t?e.join("="):`&${e.join("=")}`,t++;n=encodeURI(n)}else s.body=r;if(this.#s)return e=await this.fetchData(n,s),this.testing?this.setMessage(e.data,e.status):this.showDialog(e.data,e.status);this.result=this.simulateServer(s),setTimeout((()=>this.showDialog(this.result.data,this.result.status)),1e3)}async fetchData(t,n){try{const e=await fetch(t,n),r=e.status,i=e.headers.get("Content-Type");return{data:i.includes("json")?await e.json():await e.text(),status:r}}catch(t){return{data:"<h1>Server Error</h1>",status:status}}}simulateServer(t){let n,e;const r=t.body,i="<p>This result is a simulation. No server side form processing was performed.";return t.data=Object.fromEntries(r.entries()),delete t.body,this.forceError?(e=500,"html"===this.response?(n="<h1>Error</h1><p>HTML response</p>",n+=i):n=t):(e=200,"html"===this.response?(n="<h1>Success</h1><p>HTML response</p>",n+=i):n=t),{data:n,status:e}}setFetchOptions(t,n="POST"){const e=this.fetchOptions?JSON.parse(JSON.stringify(this.fetchOptions)):{};return e.method=n.toUpperCase(),e.headers=e.headers||{},e.headers.Accept=e.headers.Accept||t,e}showDialog(t,n){const e=this.querySelector("dialog")||this.shadowRoot.querySelector("dialog"),r=e.querySelector(`#${this.dialogMessageId}`),i=this.setMessage(t,n),o=e.querySelector("form[method=dialog]"),s=o.querySelector("input[type=submit], button");return i&&(r.innerHTML=i),r.append(o),n?(o.classList.remove("hidden"),s.focus()):o.classList.add("hidden"),this.modal?(e.classList.remove("modeless"),e.showModal()):(e.classList.add("modeless"),e.show()),e}setMessage(t,n){const{waitingElems:e,errorElems:r,successElems:i}=this,o=(this.querySelector("dialog")||this.shadowRoot.querySelector("dialog")).querySelector(`#${this.dialogMessageId}`);let s,a,l;return this.clearMessage(),null===n?(s="waiting",a=e,o.classList.add("waiting")):n>399?(s="error",a=r,o.classList.add("error"),o.classList.remove("waiting")):(s="success",a=i,o.classList.add("success"),o.classList.remove("waiting")),null!==this[s]&&void 0!==this[s]?l="json"===this.response?this.replacePlaceholders(this[s],t):this[s]:a.length>0?("json"===this.response&&this.replaceNodeContents(a,t),a.forEach((t=>t.setAttribute("slot","message")))):l="html"===this.response?null===n?this.default[s]:t:this.default[s],l}replacePlaceholders(t,n){const e=/{{([^{}]+)}}/g;let r,i=t;for(;null!==(r=e.exec(i));){const t=r[1].split(".");let e=n;for(const n of t)if(e=e?.[n],void 0===e)break;i=i.replace(r[0],void 0===e?r[0]:JSON.stringify(e))}return i.replaceAll('"',"")}replaceNodeContents(t,n){const e=/{{([^{}]+)}}/g;for(const r of t){let t,i=r.innerHTML;for(;null!==(t=e.exec(i));){const e=t[1].split(".");let r=n;for(const t of e)if(r=r?.[t],void 0===r)break;i=i.replace(t[0],void 0===r?t[0]:r)}r.innerHTML=i}return t}addFocusListeners(t){for(const n of t)"textarea"!==n.localName&&n.addEventListener("focus",(()=>{"function"==typeof n.select&&n.select()}),{signal:this.mainAbortController.signal})}resetElements(t){if(!t)return;const n=t.querySelectorAll("input, select, textarea");t.reset(),n[0].focus()}clearMessage(){const t=(this.querySelector("dialog")||this.shadowRoot.querySelector("dialog")).querySelector(`#${this.dialogMessageId}`);t.classList.remove("error"),t.classList.remove("success");for(const t of this.waitingElems)t.setAttribute("slot","waiting");for(const t of this.errorElems)t.setAttribute("slot","error");for(const t of this.successElems)t.setAttribute("slot","success")}cleanHTML(t){const n=new Set(["p","span","h1","h2","h3","h4","h5","h6","b","strong","i","hr","br"]),e=new Set(["id","class","style"]),r=document.createElement("div");r.innerHTML=t;for(let t=r.childNodes.length-1;t>=0;t--){const i=r.childNodes[t];if(i.nodeType===Node.ELEMENT_NODE){if(!n.has(i.localName.toLowerCase())){r.replaceChild(document.createTextNode(i.textContent),i);continue}const t=Array.from(i.attributes).filter((t=>e.has(t.name)));for(const t of i.attributes)i.removeAttribute(t);for(const n of t)i.setAttribute(n.name,n.value)}}return r.innerHTML}validateJson(t){try{return JSON.parse(t)}catch(n){try{const n=t.replace(/['"<>;\s\r?()]/g,"").replace(/([\w:\/\\]+)/g,'"$&"');return JSON.parse(n)}catch(t){return!1}}}handleRangeInputs(t){if(0!==t.length)for(const n of t){const t=n.value/n.max*100,e=n.parentElement.querySelector("label"),r=n.getAttribute("data-value");if(r){const t=r.replace(/[\d]+/,n.value);e.setAttribute("data-value",t)}n.style.background=`linear-gradient(to right, var(--accent-color) ${t}%, transparent ${t}%)`,n.addEventListener("input",(t=>{const i=t.target.value/n.max*100;if(r){const t=r.replace(/[\d]+/,n.value);e.setAttribute("data-value",t)}n.style.background=`linear-gradient(to right, var(--accent-color) ${i}%, transparent ${i}%)`}))}}handleProgressElems(t){if(0===t.length)return;const n=function(t){const n=t.parentElement.querySelector("label"),e=t.getAttribute("data-value");if(e){const r=e.replace(/[\d]+/,t.value);n.setAttribute("data-value",r)}},e=new MutationObserver((t=>{t.forEach((t=>{if("value"===t.attributeName){t.target.value;n(t.target)}}))})),r={attributes:!0,attributeFilter:["value"]};for(const i of t)n(i),e.observe(i,r)}addDefaultCss(){document.head.querySelector("#wijit-form-css")||document.head.append(this.defaultCss())}defaultCss(){return this.shadowRoot.querySelector("#wijit-form-css")}get customCss(){return this.#t}set customCss(t){switch(t){case"false":case!1:t=!1;const n=document.head.querySelector("style#wijit-form-css");n&&n.remove();break;default:t=!0,this.addDefaultCss()}this.#t=t}get dialogMessageId(){return this.#n}set dialogMessageId(t){this.#n=t}get fetchOptions(){return this.#e}set fetchOptions(t){"string"==typeof t&&(t=this.validateJson(t)),this.#e=null===t?{}:t}get forceError(){return this.#r}set forceError(t){let n=this.querySelector("input[name=fail]");const e=this.querySelector("form");switch(t){case"false":case!1:this.#r=!1,n&&n.remove();break;default:this.#r=!0,n||(n=document.createElement("input"),n.name="fail",n.value="true",n.type="hidden",e?e.append(n):this.append(n))}}get modal(){return this.#i}set modal(t){switch(t){case"false":case!1:t=!1;break;default:t=!0}this.#i=t}get reset(){return this.#o}set reset(t){switch(t){case"false":case!1:t=!1;break;default:t=!0}this.#o=t}get response(){return this.#a}set response(t){this.#a=t.toLowerCase()}get error(){return this.#l}set error(t){if("null"===(t=this.cleanHTML(t)))t=null;this.#l=t}get success(){return this.#c}set success(t){if("null"===(t=this.cleanHTML(t)))t=null;this.#c=t}get waiting(){return this.#d}set waiting(t){if("null"===(t=this.cleanHTML(t)))t=null;this.#d=t}}document.addEventListener("DOMContentLoaded",customElements.define("wijit-form",WijitForm));
