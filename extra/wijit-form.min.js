/**
* @author Holmes Bryant <https://github.com/HolmesBryant>
* @license GPL-3.0
*/
export default class WijitForm extends HTMLElement{#e=!1;#t="dialog-message";#r={};#i=!1;#o=!1;#s=!0;#a=!0;#n="json";#l;#c;#d;errorElems;successElems;waitingElems;default={success:"<h3>Submission Received</h3><p>Thank you!</p>",error:"<h3>Oopsie!</h3><p>There was an error. Your submission was not received.</p>",waiting:"<h1>Please Wait...</h1>"};dialog;testing=!1;static observedAttributes=["custom-css","dialog-message-id","error","fetch-options","force-error","modal","reset","response","success","waiting"];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=' <style id="wijit-form-css"> @layer wijit-form {wijit-form {--accent-color: dodgerblue; --bg1-color: rgb(250,250,250); --bg2-color: rgb(245,245,245); --bg3-color: white; --border-color: silver; --fail-color: hsl(6, 93%, 80%); --pass-color: hsl(112, 70%, 75%); --text-color-: rgb(40,40,40); --text-color-light: rgb(240,240,240); --text-color-dark: rgb(40,40,40); --gap: .5rem; --min: 35px; --min-panel: 270px; --pad: .5rem; background-color: var(--bg1-color); border-radius: 10px; color: var(--text-color); display: inline-block; padding: var(--pad); width: 100%; overflow: auto; scrollbar-gutter: stable both-edges; scrollbar-color: var(--bg2-color) var(--bg3-color); } wijit-form > * {box-sizing: border-box; } @media (prefers-color-scheme: dark) {wijit-form {--bg1-color: rgb(35,35,35); --bg2-color: rgb(40,40,40); --bg3-color: rgb(60,60,60); --border-color: dimgray; --text-color: rgb(240,240,240); } } @media only screen and (max-width: 1024px) {wijit-form {--pad: .25rem; --gap: .25rem; } } @media only screen and (max-width: 380px) {wijit-form {--pad: 0; --gap: 5px; } } } /* layer */ /*********************/ /**** Backgrounds ****/ /*********************/ wijit-form details > *, wijit-form fieldset, wijit-form section { background-color: var(--bg2-color); } wijit-form button, wijit-form input, wijit-form input::before, wijit-form select, wijit-form textarea { background-color: var(--bg3-color); } wijit-form hr { background-color: silver; } wijit-form .primary, wijit-form option:checked { background-color: var(--accent-color); } wijit-form progress { background-color: transparent; } wijit-form progress::-webkit-progress-bar { background: transparent; } wijit-form progress::-webkit-progress-value { background-color: var(--accent-color); } wijit-form progress::-moz-progress-bar { background-color: var(--accent-color); } wijit-form .error { background-color: var(--fail-color); } wijit-form .success { background-color: var(--pass-color); } wijit-form input[type=range]::-webkit-slider-thumb { background-color: var(--accent-color); } wijit-form input[type=range]::-moz-range-thumb { background-color: var(--accent-color); } /********************************/ /****** Borders / Outlines ******/ /********************************/ wijit-form button, wijit-form fieldset, wijit-form input, wijit-form input::before, wijit-form progress, wijit-form select, wijit-form textarea, wijit-form .error, wijit-form .success { border: 1px solid var(--border-color); } wijit-form option { border-bottom: 1px solid var(--border-color); } wijit-form hr, wijit-form option:last-child { border: none; } wijit-form input:user-valid:not([type="submit"]):not([type="reset"]):not([type="range"]) { border-color: var(--pass-color) } wijit-form :user-invalid { border-color: var(--fail-color) } wijit-form .success { border-color: var(--pass-color); } wijit-form .error { border-color: var(--fail-color); } wijit-form button, wijit-form fieldset, wijit-form hr, wijit-form input, wijit-form input::before, wijit-form option, wijit-form progress, wijit-form progress::-webkit-progress-value, wijit-form progress::-webkit-progress-bar, wijit-form section, wijit-form select, wijit-form textarea, wijit-form .error, wijit-form .success { border-radius: .5rem; } wijit-form input[type=range]::-webkit-slider-thumb { border-radius: 50%; } wijit-form input[type=range]::-moz-range-thumb { border-radius: 50%; } wijit-form input[type="radio"], wijit-form input[type="radio"]::before { border-radius: 50%; } wijit-form option { border-radius: 0; } wijit-form option:first-child { border-radius: .5rem .5rem 0 0; } wijit-form option:last-child { border-radius: 0 0 .5rem .5rem; } wijit-form :focus-visible {border-color: transparent; outline: 1px solid var(--accent-color); } wijit-form input:checked::before { outline: 2px solid var(--accent-color); } /******************************/ /*********** Accent ***********/ /******************************/ wijit-form input { accent-color: var(--accent-color); } /******************************/ /************ Text ************/ /******************************/ wijit-form label.required:after { color: var(--fail-color) } wijit-form button, wijit-form input, wijit-form fieldset, wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form textarea { color: var(--text-color); } wijit-form .primary, wijit-form option:checked { color: var(--text-color-light); } wijit-form input:checked::before {color: var(--accent-color); } wijit-form option, wijit-form button, wijit-form input, wijit-form fieldset, wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form textarea {font-size: 1rem; letter-spacing: .1rem; } wijit-form input[type="checkbox"]::before, wijit-form input[type="radio"]::before { font-size: var(--min); } wijit-form label.required:after { font-size: small } wijit-form select:not([multiple]):not([size]) option {font-size: larger; } wijit-form button, wijit-form input[type="button"], wijit-form input[type="reset"], wijit-form input[type="submit"], wijit-form label, wijit-form legend, wijit-form option, wijit-form select, wijit-form .error, wijit-form .success { font-weight:bold; } wijit-form .error, wijit-form .success { text-align: center; } wijit-form .primary, wijit-form option:checked { text-shadow: 1px 1px 1px black; } /*********************/ /****** Shadows ******/ /*********************/ wijit-form  button:hover, wijit-form input[type="button"]:hover, wijit-form input[type="image"]:hover, wijit-form input[type="submit"]:hover, wijit-form input[type="reset"]:hover, wijit-form option:hover { box-shadow: 2px 2px 5px black; } wijit-form button:active, wijit-form input[type="button"]:active, wijit-form input[type="image"]:active, wijit-form input[type="submit"]:active, wijit-form input[type="reset"]:active, wijit-form option:active, wijit-form option:checked { box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]::-webkit-slider-thumb:hover {box-shadow: 2px 2px 5px black; } wijit-form input[type=range]::-moz-range-thumb:hover {box-shadow: 2px 2px 5px black; } wijit-form input[type=range]:active::-webkit-slider-thumb {box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:active::-moz-range-thumb {box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:focus::-webkit-slider-thumb {box-shadow: inset 2px 2px 5px black; } wijit-form input[type=range]:focus::-moz-range-thumb {box-shadow: inset 2px 2px 5px black; } /*********************/ /******* Cursor ******/ /*********************/ wijit-form input[type="button"], wijit-form input[type="checkbox"], wijit-form input[type="radio"], wijit-form input[type="color"], wijit-form input[type="range"], wijit-form input[type="reset"], wijit-form input[type="submit"], wijit-form label, wijit-form button, wijit-form select { cursor: pointer; } wijit-form input:disabled, wijit-form *[disabled] { cursor: not-allowed; } /*********************/ /***** Structure *****/ /*********************/ wijit-form button, wijit-form input[type=submit], wijit-form input[type=reset] {margin: var(--gap); } wijit-form button, wijit-form select:not([size]), wijit-form input {min-height: var(--min); max-height: var(--min); min-width: var(--min); padding: var(--pad); } wijit-form div {align-items: stretch; display: flex; flex-direction: column; flex-wrap: wrap; gap: 0 var(--gap); justify-content: center; margin: 1rem 0; } wijit-form div.row { align-items: center; } wijit-form div > *, wijit-form section > *, wijit-form fieldset > * { flex: 1; } wijit-form fieldset {display: flex; flex-direction: column; flex-wrap: wrap; gap: var(--gap); overflow-x: hidden; overflow-y: auto; padding: var(--pad); } wijit-form header {display: block; flex-grow: 0; flex-shrink: 0; } wijit-form hr {min-width: 100%; max-height: 5px; } wijit-form .row > hr {min-width: 5px; margin: 0; max-width: 5px; max-height: 100%; } wijit-form input:disabled {opacity: 0.7; } wijit-form input[type="checkbox"], wijit-form input[type="radio"] {appearance: none; height: var(--min); position: relative; width: var(--min); } wijit-form input:checked::before {content: ""; line-height: 0; position: absolute; display: flex; height: 100%; width: 100%; align-items: center; justify-content: center; } wijit-form input[type="checkbox"]:checked::before {content: "✔"; } wijit-form input[type="radio"]:checked::before {content: "⬤"; } wijit-form input[type="color"], wijit-form input[type="checkbox"], wijit-form input[type="radio"] {flex: 0; flex-basis: var(--min); padding: 0; width: var(--min); } wijit-form input[type=file]::file-selector-button {background-color: var(--bg2-color); border: 1px solid var(--border-color); border-radius: .5rem; color: var(--text-color); font-weight: bold; padding: var(--pad); } /***** Input Range *****/ wijit-form div:has(input[type=range]) > label::after {content: attr(data-value); margin: 0 var(--gap); font-weight: normal; } wijit-form input[type=range] {appearance: none; -webkit-appearance: none; width: 100%; cursor: pointer; outline: none; padding: 0; max-height: var(--pad); min-height: var(--pad); } wijit-form input[type=range]::-webkit-slider-thumb {-webkit-appearance: none; height: var(--min); width: var(--min); } wijit-form input[type=range]::-moz-range-thumb {appearance: none; height: var(--min); width: var(--min); } /***** /Range *****/ wijit-form div:has(input[type=range]) > label {margin-bottom: var(--gap); } wijit-form label {flex: 0; white-space: nowrap; } wijit-form option {align-items: center; display: flex; min-height: var(--min); padding: 0 .5rem; } wijit-form progress {-webkit-appearance: none; -moz-appearance: none; appearance: none; inline-size: 100%; min-height: 1rem; } wijit-form div:has(progress) label::after {content: attr(data-value); font-weight: normal; margin: 0 var(--gap); } wijit-form progress::-webkit-progress-value { min-height: 1rem; } wijit-form section {display: flex; flex-direction: column; flex-wrap: nowrap; gap: var(--gap); margin: 1rem 0; padding: var(--pad); } wijit-form section > section {margin: 0; padding: 0; } wijit-form section + section { margin: 1rem 0; } wijit-form section.row section + section { margin: 0; } wijit-form select {min-height: var(--min); min-width: var(--min); overflow-y: auto; } wijit-form textarea {min-height: 5rem; min-width: 10rem; padding: var(--pad); width: 100%; } wijit-form .required:after {content: "*"; font-size: x-large; vertical-align: super; } /**** Classes ****/ wijit-form .center > *, wijit-form .start > *, wijit-form .end > *, wijit-form .space-around > *, wijit-form .space-between > * { flex: 0 1 max-content; } wijit-form .center {justify-content: center; align-items: center; } wijit-form section.row.center {align-items: normal; } wijit-form .end {align-content: flex-end; justify-content: flex-end; } wijit-form .reverse.end {align-content: flex-start; justify-content: flex-start; } wijit-form .nowrap { flex-wrap: nowrap} wijit-form .reverse { flex-direction: column-reverse; } wigit-form .left {align-items: start; } wijit-form .right {align-items: end; } wijit-form .row {flex-direction: row; flex-wrap: wrap; } wijit-form .row.reverse { flex-direction: row-reverse; } wijit-form .space-around {justify-content: space-around; align-content: space-around; } wijit-form .space-between {justify-content: space-between; } wijit-form .row.space-between {align-content: space-between; } wijit-form .reverse.start {align-content: flex-end; justify-content: flex-end; } wijit-form .flex0 {flex: 0; } wijit-form .flex1 {flex: 1; } wijit-form .flex2 {flex: 2; } wijit-form .fb240 {flex-basis: 240px; } wijit-form .fb320 {flex-basis: 320px; } wijit-form .fb480 {flex-basis: 480px; } wijit-form .fb768 {flex-basis: 768px; } wijit-form .fb1024 {flex-basis: 1024px; } </style> <style> :host {--fail-color: darksalmon; --pass-color: limegreen; } button {background-color: var(--accent-color); border: 1px solid var(--border-color); border-radius: 5px; color: var(--text-color); cursor: pointer; font-size: large; font-weight: bold; outline-color: var(--accent-color); padding: var(--pad); } button:hover, button:focus {box-shadow: 2px 2px 5px black; } button:active {box-shadow: inset 2px 2px 5px black; } dialog {background: transparent; border: none; box-sizing: border-box; color: var(--text-color); outline: none; text-align: center; } dialog::backdrop {background-color: white; color: black; opacity: 0.75; } dialog.modeless {accent-color: transparent; backdrop-filter: blur(.3rem); height: 100%; outline: none; overflow: hidden; padding: 0; top: 0; width: 100%; } dialog.modeless[open] {display: table; } .hidden { display: none; } #dialog-message {background-color: var(--bg3-color); border: 1px solid var(--border-color); border-radius: 10px; display: table-cell; padding: 1rem; vertical-align: middle; } dialog.modeless #dialog-message {transition: all 1s; } #dialog-message.waiting {background-color: transparent; border: none; margin: auto; padding: 0; width: auto; } #dialog-message.error {border-color: var(--fail-color); } #dialog-message.success {border-color: var(--pass-color); } #wrapper {position: relative; } @media (prefers-color-scheme: dark) {dialog::backdrop {background-color: black; color: white; } } </style> <div id="wrapper"> <slot></slot> <slot name="dialog"> <dialog class="modeless"> <div id="dialog-message"> <slot name="message"></slot> </div> <form method="dialog" class="hidden"> <button>OK</button> </form> </dialog> </slot> </div> <div hidden id="responses" style="display:none"> <button aria-label="close" form="dialog-form">OK</button> <slot name="waiting"></slot> <slot name="success"></slot> <slot name="error"></slot> </div> ',this.mainAbortController=new AbortController}connectedCallback(){this.errorElems=this.querySelectorAll("[slot=error]"),this.successElems=this.querySelectorAll("[slot=success]"),this.waitingElems=this.querySelectorAll("[slot=waiting]"),this.customCss||this.addDefaultCss(),this.handleRangeInputs(this.querySelectorAll("input[type=range]")),this.handleProgressElems(this.querySelectorAll("progress")),this.addEventListeners()}attributeChangedCallback(e,t,r){r=r.toLowerCase(),e.indexOf("-")>-1&&(e=(e=e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join("")).replace(e.charAt(0),e.charAt(0).toLowerCase())),this[e]=r}disconnectedCallback(){this.mainAbortController.abort()}addEventListeners(){const e=this.querySelector("form"),t=this.querySelector("dialog")||this.shadowRoot.querySelector("dialog");this.addFocusListeners(this.querySelectorAll("input")),e&&e.addEventListener("submit",(e=>{e.preventDefault(),this.reset&&e.target.reset(),this.submitData(e)}),{signal:this.mainAbortController.signal}),t.addEventListener("close",((e,t)=>{this.reset&&this.resetElements(t)}),{signal:this.mainAbortController.signal})}async submitData(e){if(e.preventDefault(),e.target.action.endsWith("false"))return;let t,r;const i=new FormData(e.target),o="html"===this.response?"text/html":"application/json",s=e.target.getAttribute("method")||"POST",a=this.setFetchOptions(s,o);if(this.testing||this.showDialog(this.waiting,null),e.target.action.endsWith("test")?this.#a=!1:(this.#a=!0,t=e.target.action),"GET"===a.method||"HEAD"===a.method){let e=0;t+="?";for(const r of i.entries())t+=0===e?r.join("="):`&${r.join("=")}`,e++;t=encodeURI(t)}else a.body=i;if(this.#a)return r=await this.fetchData(t,a),this.testing?this.setMessage(r.data,r.status):this.showDialog(r.data,r.status);this.result=this.simulateServer(a),setTimeout((()=>this.showDialog(this.result.data,this.result.status)),1e3)}async fetchData(e,t){try{const r=await fetch(e,t),i=r.status,o=r.headers.get("Content-Type");return{data:o.includes("json")?await r.json():await r.text(),status:i}}catch(e){return{data:"<h1>Server Error</h1>",status:status}}}simulateServer(e){let t,r;const i=e.body,o="<p>This result is a simulation. No server side form processing was performed.";return e.data=Object.fromEntries(i.entries()),delete e.body,this.forceError?(r=500,"html"===this.response?(t="<h1>Error</h1><p>HTML response</p>",t+=o):t=e):(r=200,"html"===this.response?(t="<h1>Success</h1><p>HTML response</p>",t+=o):t=e),{data:t,status:r}}setFetchOptions(e,t="POST"){const r=this.fetchOptions?JSON.parse(JSON.stringify(this.fetchOptions)):{};return r.method=t.toUpperCase(),r.headers=r.headers||{},r.headers.Accept=r.headers.Accept||e,r}showDialog(e,t){const r=this.querySelector("dialog")||this.shadowRoot.querySelector("dialog"),i=r.querySelector(`#${this.dialogMessageId}`),o=this.setMessage(e,t),s=r.querySelector("form[method=dialog]"),a=s.querySelector("input[type=submit], button");return o&&(i.innerHTML=o),i.append(s),t?(s.classList.remove("hidden"),a.focus()):s.classList.add("hidden"),this.modal?(r.classList.remove("modeless"),r.showModal()):(r.classList.add("modeless"),r.show()),r}setMessage(e,t){const{waitingElems:r,errorElems:i,successElems:o}=this,s=(this.querySelector("dialog")||this.shadowRoot.querySelector("dialog")).querySelector(`#${this.dialogMessageId}`);let a,n,l;return this.clearMessage(),null===t?(a="waiting",n=r,s.classList.add("waiting")):t>399?(a="error",n=i,s.classList.add("error"),s.classList.remove("waiting")):(a="success",n=o,s.classList.add("success"),s.classList.remove("waiting")),null!==this[a]&&void 0!==this[a]?l="json"===this.response?this.replacePlaceholders(this[a],e):this[a]:n.length>0?("json"===this.response&&this.replaceNodeContents(n,e),n.forEach((e=>e.setAttribute("slot","message")))):l="html"===this.response?null===t?this.default[a]:e:this.default[a],l}replacePlaceholders(e,t){const r=/{{([^{}]+)}}/g;let i,o=e;for(;null!==(i=r.exec(o));){const e=i[1].split(".");let r=t;for(const t of e)if(r=r?.[t],void 0===r)break;o=o.replace(i[0],void 0===r?i[0]:JSON.stringify(r))}return o.replaceAll('"',"")}replaceNodeContents(e,t){const r=/{{([^{}]+)}}/g;for(const i of e){let e,o=i.innerHTML;for(;null!==(e=r.exec(o));){const r=e[1].split(".");let i=t;for(const e of r)if(i=i?.[e],void 0===i)break;o=o.replace(e[0],void 0===i?e[0]:i)}i.innerHTML=o}return e}addFocusListeners(e){for(const t of e)"textarea"!==t.localName&&t.addEventListener("focus",(()=>{"function"==typeof t.select&&t.select()}),{signal:this.mainAbortController.signal})}resetElements(e){if(!e)return;const t=e.querySelectorAll("input, select, textarea");e.reset(),t[0].focus()}clearMessage(){const e=(this.querySelector("dialog")||this.shadowRoot.querySelector("dialog")).querySelector(`#${this.dialogMessageId}`);e.classList.remove("error"),e.classList.remove("success");for(const e of this.waitingElems)e.setAttribute("slot","waiting");for(const e of this.errorElems)e.setAttribute("slot","error");for(const e of this.successElems)e.setAttribute("slot","success")}cleanHTML(e){const t=new Set(["p","span","h1","h2","h3","h4","h5","h6","b","strong","i","hr","br"]),r=new Set(["id","class","style"]),i=document.createElement("div");i.innerHTML=e;for(let e=i.childNodes.length-1;e>=0;e--){const o=i.childNodes[e];if(o.nodeType===Node.ELEMENT_NODE){if(!t.has(o.localName.toLowerCase())){i.replaceChild(document.createTextNode(o.textContent),o);continue}const e=Array.from(o.attributes).filter((e=>r.has(e.name)));for(const e of o.attributes)o.removeAttribute(e);for(const t of e)o.setAttribute(t.name,t.value)}}return i.innerHTML}validateJson(e){try{return JSON.parse(e)}catch(t){try{const t=e.replace(/['"<>;\s\t\n\r?()]/g,"").replace(/([\w:\/\\]+)/g,'"$&"');return JSON.parse(t)}catch(e){return!1}}}handleRangeInputs(e){if(0!==e.length)for(const t of e){const e=t.value/t.max*100,r=t.parentElement.querySelector("label"),i=t.getAttribute("data-value");if(i){const e=i.replace(/[\d]+/,t.value);r.setAttribute("data-value",e)}t.style.background=`linear-gradient(to right, var(--accent-color) ${e}%, transparent ${e}%)`,t.addEventListener("input",(e=>{const o=e.target.value/t.max*100;if(i){const e=i.replace(/[\d]+/,t.value);r.setAttribute("data-value",e)}t.style.background=`linear-gradient(to right, var(--accent-color) ${o}%, transparent ${o}%)`}))}}handleProgressElems(e){if(0===e.length)return;const t=function(e){const t=e.parentElement.querySelector("label"),r=e.getAttribute("data-value");if(r){const i=r.replace(/[\d]+/,e.value);t.setAttribute("data-value",i)}},r=new MutationObserver((e=>{e.forEach((e=>{if("value"===e.attributeName){e.target.value;t(e.target)}}))})),i={attributes:!0,attributeFilter:["value"]};for(const o of e)t(o),r.observe(o,i)}addDefaultCss(){document.head.querySelector("#wijit-form-css")||document.head.append(this.defaultCss())}defaultCss(){return this.shadowRoot.querySelector("#wijit-form-css")}get customCss(){return this.#e}set customCss(e){switch(e){case"false":case!1:e=!1;const t=document.head.querySelector("style#wijit-form-css");t&&t.remove();break;default:e=!0,this.addDefaultCss()}this.#e=e}get dialogMessageId(){return this.#t}set dialogMessageId(e){this.#t=e}get fetchOptions(){return this.#r}set fetchOptions(e){"string"==typeof e&&(e=this.validateJson(e)),this.#r=null===e?{}:e}get forceError(){return this.#i}set forceError(e){let t=this.querySelector("input[name=fail]");const r=this.querySelector("form");switch(e){case"false":case!1:this.#i=!1,t&&t.remove();break;default:this.#i=!0,t||(t=document.createElement("input"),t.name="fail",t.value="true",t.type="hidden",r?r.append(t):this.append(t))}}get modal(){return this.#o}set modal(e){switch(e){case"false":case!1:e=!1;break;default:e=!0}this.#o=e}get reset(){return this.#s}set reset(e){switch(e){case"false":case!1:e=!1;break;default:e=!0}this.#s=e}get response(){return this.#n}set response(e){this.#n=e.toLowerCase()}get error(){return this.#l}set error(e){if("null"===(e=this.cleanHTML(e)))e=null;this.#l=e}get success(){return this.#c}set success(e){if("null"===(e=this.cleanHTML(e)))e=null;this.#c=e}get waiting(){return this.#d}set waiting(e){if("null"===(e=this.cleanHTML(e)))e=null;this.#d=e}}document.addEventListener("DOMContentLoaded",customElements.define("wijit-form",WijitForm));
